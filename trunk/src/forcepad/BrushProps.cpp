// generated by Fast Light User Interface Designer (fluid) version 1.0105

#include "BrushProps.h"
#include "PaintView.h"

inline void CBrushProps::cb_btnOk_i(Fl_HoverButton*, void*) {
  m_modalResult = MR_OK;
wndBrushProps->hide();
}
void CBrushProps::cb_btnOk(Fl_HoverButton* o, void* v) {
  ((CBrushProps*)(o->parent()->user_data()))->cb_btnOk_i(o,v);
}

#include <FL/Fl_Pixmap.H>
static const char *idata_additional_close[] = {
"     5    36       18            1",
"` c #656565",
". c #696969",
"# c #797975",
"a c #797979",
"b c #7d7d7d",
"c c #81817d",
"d c #898989",
"e c #959191",
"f c #a19d9d",
"g c #aeaeaa",
"h c #b2aeaa",
"i c #bab6b2",
"j c #c6c6c2",
"k c #cecec6",
"l c #cececa",
"m c #d2ceca",
"n c #d2d2ca",
"o c None",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooolo",
"oomfl",
"ooibl",
"omd#l",
"oh.#l",
"kc`#l",
"h``#l",
"h``#l",
"kc`#l",
"og`#l",
"okc#l",
"oogal",
"ookel",
"ooojn",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo"
};
static Fl_Pixmap image_additional_close(idata_additional_close);

inline void CBrushProps::cb_sldBlendFactor_i(Fl_Value_Slider*, void*) {
  if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*)m_view;
	paintView->setBlendFactor((int)sldBlendFactor->value());
};
}
void CBrushProps::cb_sldBlendFactor(Fl_Value_Slider* o, void* v) {
  ((CBrushProps*)(o->parent()->user_data()))->cb_sldBlendFactor_i(o,v);
}

inline void CBrushProps::cb_mnuBrush_i(Fl_Choice*, void*) {
  if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*)m_view;
	paintView->setCurrentBrush(mnuBrush->value());
};
}
void CBrushProps::cb_mnuBrush(Fl_Choice* o, void* v) {
  ((CBrushProps*)(o->parent()->user_data()))->cb_mnuBrush_i(o,v);
}

Fl_Menu_Item CBrushProps::menu_mnuBrush[] = {
 {"Round 4", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Round 8", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Round 16", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Round 32", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Round 64", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Square 4", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Square 8", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Square 16", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Square 32", 0,  0, 0, 0, 0, 0, 10, 56},
 {"Square 64", 0,  0, 0, 0, 0, 0, 10, 56},
 {0,0,0,0,0,0,0,0,0}
};
Fl_Menu_Item* CBrushProps::mnuBrushR4 = CBrushProps::menu_mnuBrush + 0;
Fl_Menu_Item* CBrushProps::mnuBrushR8 = CBrushProps::menu_mnuBrush + 1;
Fl_Menu_Item* CBrushProps::mnuBrushR16 = CBrushProps::menu_mnuBrush + 2;
Fl_Menu_Item* CBrushProps::mnuBrushR32 = CBrushProps::menu_mnuBrush + 3;
Fl_Menu_Item* CBrushProps::mnuBrushR64 = CBrushProps::menu_mnuBrush + 4;
Fl_Menu_Item* CBrushProps::mnuBrushS4 = CBrushProps::menu_mnuBrush + 5;
Fl_Menu_Item* CBrushProps::mnuBrushS8 = CBrushProps::menu_mnuBrush + 6;
Fl_Menu_Item* CBrushProps::mnuBrushS16 = CBrushProps::menu_mnuBrush + 7;
Fl_Menu_Item* CBrushProps::mnuBrushS32 = CBrushProps::menu_mnuBrush + 8;
Fl_Menu_Item* CBrushProps::mnuBrushS64 = CBrushProps::menu_mnuBrush + 9;

CBrushProps::CBrushProps() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = wndBrushProps = new Fl_Double_Window(184, 73, "Brush properties");
    w = o;
    o->box(FL_THIN_UP_BOX);
    o->user_data((void*)(this));
    { Fl_HoverButton* o = btnOk = new Fl_HoverButton(174, 1, 9, 42);
      o->box(FL_PLASTIC_UP_BOX);
      o->down_box(FL_PLASTIC_DOWN_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->image(image_additional_close);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(12);
      o->labelcolor(FL_BLACK);
      o->callback((Fl_Callback*)cb_btnOk);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldBlendFactor = new Fl_Value_Slider(54, 4, 108, 17, "Blending");
      o->type(5);
      o->box(FL_PLASTIC_DOWN_BOX);
      o->labelsize(10);
      o->maximum(255);
      o->step(1);
      o->value(255);
      o->callback((Fl_Callback*)cb_sldBlendFactor);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Choice* o = mnuBrush = new Fl_Choice(54, 23, 107, 17, "Brush");
      o->box(FL_PLASTIC_UP_BOX);
      o->down_box(FL_PLASTIC_DOWN_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->labelsize(10);
      o->textsize(10);
      o->callback((Fl_Callback*)cb_mnuBrush);
      o->menu(menu_mnuBrush);
    }
    o->set_non_modal();
    o->clear_border();
    o->end();
  }
  m_view = NULL;
}

CBrushProps::~CBrushProps() {
  delete wndBrushProps;
}

void CBrushProps::show() {
  setSize(wndBrushProps->w(),btnOk->h()+2);

if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*)m_view;
	sldBlendFactor->value(paintView->getBlendFactor());
	mnuBrush->value(paintView->getCurrentBrushIdx());
}

wndBrushProps->show();
//while (wndBrushProps->visible()) Fl::wait();
}

void CBrushProps::setPosition(int x, int y) {
  wndBrushProps->position(x, y);
}

void CBrushProps::setSize(int width, int height) {
  wndBrushProps->size_range(0, 0);
wndBrushProps->size(width, height);
}

void CBrushProps::hide() {
  wndBrushProps->hide();
}

void CBrushProps::setView(void* p) {
  m_view = p;
}
