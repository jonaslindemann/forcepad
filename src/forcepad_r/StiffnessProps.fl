# data file for the Fltk User Interface Designer (fluid)
version 1.0100 
header_name {.h} 
code_name {.cpp}
decl {\#define MR_OK 0} {public
} 

decl {\#define MR_CANCEL 1} {public
} 

decl {\#include "PaintView.h"} {} 

class CStiffnessProps {open
} {
  decl {void* m_view} {}
  decl {int m_modalResult} {}
  Function {CStiffnessProps()} {open
  } {
    Fl_Window wnd {
      label {Drawing properties} open selected
      xywh {391 322 190 73} box THIN_UP_BOX non_modal noborder visible
    } {
      Fl_Button btnOk {
        label X
        callback {m_modalResult = MR_OK;
wnd->hide();}
        image {g:/work/forcepad2/images/additional_close.xpm} xywh {170 4 16 19} box PLASTIC_UP_BOX down_box PLASTIC_DOWN_BOX labelfont 1 labelsize 12
      }
      Fl_Box boxStiffnessColor {
        xywh {134 4 33 35} box PLASTIC_DOWN_FRAME
        code0 {\#include "Fl_ColorBox.h"}
        class Fl_ColorBox
      }
      Fl_Value_Slider sldStiffness {
        label Stiffness
        callback {if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*) m_view;
	paintView->setStiffness(sldStiffness->value());
}
boxStiffnessColor->setColor(1.0f-sldStiffness->value(), 1.0f-sldStiffness->value(), 1.0f-sldStiffness->value());}
        xywh {5 20 125 19} type {Horz Knob} box PLASTIC_DOWN_BOX labelsize 10 align 5
      }
    }
    code {m_view = NULL;} {}
  }
  Function {~CStiffnessProps()} {} {
    code {delete wnd;} {}
  }
  Function {show()} {open
  } {
    code {setSize(wnd->w(),boxStiffnessColor->h()+10);

if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*) m_view;
	sldStiffness->value(paintView->getStiffness());
	boxStiffnessColor->setColor(1.0f-paintView->getStiffness(), 1.0f-paintView->getStiffness(), 1.0f-paintView->getStiffness());
}

wnd->show();
boxStiffnessColor->show();


//while (wnd->visible()) Fl::wait();} {}
  }
  Function {setPosition(int x, int y)} {} {
    code {wnd->position(x, y);} {}
  }
  Function {setSize(int width, int height)} {} {
    code {wnd->size_range(0, 0);
wnd->size(width, height);} {}
  }
  Function {setView(void* p)} {} {
    code {m_view = p;} {}
  }
  Function {hide()} {} {
    code {wnd->hide();} {}
  }
} 
