// generated by Fast Light User Interface Designer (fluid) version 1.0105

#include "StiffnessProps.h"
#include "PaintView.h"

inline void CStiffnessProps::cb_btnOk_i(Fl_Button*, void*) {
  m_modalResult = MR_OK;
wnd->hide();
}
void CStiffnessProps::cb_btnOk(Fl_Button* o, void* v) {
  ((CStiffnessProps*)(o->parent()->user_data()))->cb_btnOk_i(o,v);
}

inline void CStiffnessProps::cb_sldStiffness_i(Fl_Value_Slider*, void*) {
  if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*) m_view;
	paintView->setStiffness(sldStiffness->value());
}
boxStiffnessColor->setColor(1.0f-sldStiffness->value(), 1.0f-sldStiffness->value(), 1.0f-sldStiffness->value());
}
void CStiffnessProps::cb_sldStiffness(Fl_Value_Slider* o, void* v) {
  ((CStiffnessProps*)(o->parent()->user_data()))->cb_sldStiffness_i(o,v);
}

CStiffnessProps::CStiffnessProps() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = wnd = new Fl_Double_Window(190, 73, "Drawing properties");
    w = o;
    o->box(FL_THIN_UP_BOX);
    o->user_data((void*)(this));
    { Fl_Button* o = btnOk = new Fl_Button(170, 4, 16, 19, "X");
      o->box(FL_PLASTIC_UP_BOX);
      o->down_box(FL_PLASTIC_DOWN_BOX);
      o->labelfont(1);
      o->labelsize(12);
      o->callback((Fl_Callback*)cb_btnOk);
    }
    { Fl_ColorBox* o = boxStiffnessColor = new Fl_ColorBox(134, 4, 33, 35);
      o->box(FL_PLASTIC_DOWN_FRAME);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldStiffness = new Fl_Value_Slider(5, 20, 125, 19, "Stiffness");
      o->type(5);
      o->box(FL_PLASTIC_DOWN_BOX);
      o->labelsize(10);
      o->callback((Fl_Callback*)cb_sldStiffness);
      o->align(FL_ALIGN_TOP_LEFT);
    }
    o->set_non_modal();
    o->clear_border();
    o->end();
  }
  m_view = NULL;
}

CStiffnessProps::~CStiffnessProps() {
  delete wnd;
}

void CStiffnessProps::show() {
  setSize(wnd->w(),boxStiffnessColor->h()+10);

if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*) m_view;
	sldStiffness->value(paintView->getStiffness());
	boxStiffnessColor->setColor(1.0f-paintView->getStiffness(), 1.0f-paintView->getStiffness(), 1.0f-paintView->getStiffness());
}

wnd->show();
boxStiffnessColor->show();


//while (wnd->visible()) Fl::wait();
}

void CStiffnessProps::setPosition(int x, int y) {
  wnd->position(x, y);
}

void CStiffnessProps::setSize(int width, int height) {
  wnd->size_range(0, 0);
wnd->size(width, height);
}

void CStiffnessProps::setView(void* p) {
  m_view = p;
}

void CStiffnessProps::hide() {
  wnd->hide();
}
