// generated by Fast Light User Interface Designer (fluid) version 1.0105

#include "CalcProps.h"
#include "PaintView.h"

inline void CCalcProps::cb_btnOk_i(Fl_HoverButton*, void*) {
  m_modalResult = MR_OK;
wndCalcProps->hide();
}
void CCalcProps::cb_btnOk(Fl_HoverButton* o, void* v) {
  ((CCalcProps*)(o->parent()->user_data()))->cb_btnOk_i(o,v);
}

#include <FL/Fl_Pixmap.H>
static const char *idata_additional_close[] = {
"     5    36       18            1",
"` c #656565",
". c #696969",
"# c #797975",
"a c #797979",
"b c #7d7d7d",
"c c #81817d",
"d c #898989",
"e c #959191",
"f c #a19d9d",
"g c #aeaeaa",
"h c #b2aeaa",
"i c #bab6b2",
"j c #c6c6c2",
"k c #cecec6",
"l c #cececa",
"m c #d2ceca",
"n c #d2d2ca",
"o c None",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooolo",
"oomfl",
"ooibl",
"omd#l",
"oh.#l",
"kc`#l",
"h``#l",
"h``#l",
"kc`#l",
"og`#l",
"okc#l",
"oogal",
"ookel",
"ooojn",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo",
"ooooo"
};
static Fl_Pixmap image_additional_close(idata_additional_close);

inline void CCalcProps::cb_sldGridSize_i(Fl_Value_Slider*, void*) {
  if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*)m_view;
	paintView->setGridStride(sldGridSize->value());
};
}
void CCalcProps::cb_sldGridSize(Fl_Value_Slider* o, void* v) {
  ((CCalcProps*)(o->parent()->user_data()))->cb_sldGridSize_i(o,v);
}

inline void CCalcProps::cb_chkUseWeight_i(Fl_Light_Button*, void*) {
  if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*)m_view;
	paintView->setUseWeight(chkUseWeight->value());
};
}
void CCalcProps::cb_chkUseWeight(Fl_Light_Button* o, void* v) {
  ((CCalcProps*)(o->parent()->user_data()))->cb_chkUseWeight_i(o,v);
}

CCalcProps::CCalcProps() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = wndCalcProps = new Fl_Double_Window(184, 73, "Drawing properties");
    w = o;
    o->box(FL_THIN_UP_BOX);
    o->user_data((void*)(this));
    { Fl_HoverButton* o = btnOk = new Fl_HoverButton(174, 1, 9, 42);
      o->box(FL_PLASTIC_UP_BOX);
      o->down_box(FL_PLASTIC_DOWN_BOX);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->image(image_additional_close);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(12);
      o->labelcolor(FL_BLACK);
      o->callback((Fl_Callback*)cb_btnOk);
      o->align(FL_ALIGN_CENTER);
      o->when(FL_WHEN_RELEASE);
    }
    { Fl_Value_Slider* o = sldGridSize = new Fl_Value_Slider(51, 3, 119, 17, "Grid step");
      o->type(5);
      o->box(FL_PLASTIC_DOWN_BOX);
      o->labelsize(10);
      o->minimum(2);
      o->maximum(32);
      o->step(1);
      o->value(8);
      o->callback((Fl_Callback*)cb_sldGridSize);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Light_Button* o = chkUseWeight = new Fl_Light_Button(50, 23, 120, 19, "Use weight");
      o->box(FL_NO_BOX);
      o->down_box(FL_PLASTIC_DOWN_BOX);
      o->selection_color(FL_FOREGROUND_COLOR);
      o->labelsize(10);
      o->callback((Fl_Callback*)cb_chkUseWeight);
    }
    o->set_non_modal();
    o->clear_border();
    o->end();
  }
}

CCalcProps::~CCalcProps() {
  delete wndCalcProps;
}

void CCalcProps::show() {
  setSize(wndCalcProps->w(),btnOk->h()+2);

if (m_view!=NULL)
{
	CPaintView* paintView = (CPaintView*) m_view;
}

wndCalcProps->show();
}

void CCalcProps::setPosition(int x, int y) {
  wndCalcProps->position(x, y);
}

void CCalcProps::setSize(int width, int height) {
  wndCalcProps->size_range(0, 0);
wndCalcProps->size(width, height);
}

void CCalcProps::setView(void* p) {
  m_view = p;
}

void CCalcProps::hide() {
  wndCalcProps->hide();
}
